?name four major types of erros and briefly define each one?
*complie-time errors: errors found by the complier, syntax and type errors
*link-time errors: errors found by the linker when it is trying to combine object files into an executable program
*run-time errors: errors found by checks in a running program. 
*logic errors: errors found by the programmer looking for the causes of erroneous results

?what kinds of errors can we ignore in student programs?
Caller errors. 

?what guarantees shoud every completed project offer?
*No progran1 is complete until we have considered all of these potential sources of errors .

?list three approaches we can take to eliminate errors in programs and produce acccepable software?
*Organize software to minimize errors. 
*Eliminate most of the errors we made through debugging and testing. 
*Make sure the remaining errors are not serious

?why do we hate debugging?
it can be tedious and is a time-wasting aspect of programming and programmers have to go to great lengths to find bugs

?what is a syntax error, give five examples
*the compiler rejects code that is not well formed
1. int s1 = area(7 //error: missing );
2. int s2 = area(7) //error: miising ;
3. Int s3 = area(6); // error: Int is not a type
4. int s4 = area('5); //error: non-terminated character (' missing)
5. int s5 = area 5 //error: ();

?what is a type error, give five examples
*type errors report mismatches between the types you declared for your variables, funcations, exception
1. int x0 = arena(7); //error: undeclared function
2. int x1 = area(7); //error: wrong number of arguments
3. int x2 = area("seven", 2); //error: 1st arguemnt is wrong
4. int x3 = area(4, "2"); //error: 2nd arguemnt is wrong
5. int x4 = area(4, 5, 4); //error: to many arguments

what is a linker error, give three examples
When the program is successfully compiled and attempting to link the different object files with the main object file.
1. bad arguments
2. accceping error
3. hardware detected error

?what is a logic error, give three examples?
Stroustrup explained, thing of computers as very fast morons, they will do exactly what you tell them, even if it is wrong.
A logical error is a human error, which will complie providing the wrong result
1. Returning incorrect values
2. Output working fine, but unable to read certain data in vector
3. Missing semi colons


?how do you know if a result is plausible? what techniques do you have to answer such questions?
Only when we know tlat we have a plausible answer does it make sense to proceed with further work.
Aa noble art that combines common sense and some very simple arithmetic applied to a few facts. 

?how do you test if an input operation succeeded?
*a good way to test if an input succeeded is by testing cin, and using cerr to output the error by using error() method


?describe the prrcess of how exceptions are thrown and caught?
*added catch() to handle exceptions of any type whatsoever. 

?why, with a vector called v, is v[v.size()] a range error? what would be the result of calling this?
It is trying to pass a value as an argument to a function that does not allow a range that includes the value

?define precondiction and post conition; give an example?
*Stating pre-conditions helps us improve our design and catch usage errors early. 
*Pre- and Post-conditional provide basic checks in code

?when would you not test a pre-conditions?
If the function is called with arguments that satisfy the pre-condition, then it does not invoke undefined behavior.

?when would you not test a post-conditions?
If there isn't a function to test


?what are the steps in debugging a program?
1. Get the program to complie
2. Get the program to link
3.Get the program to do what it is supposed to do


?why does commenting help when debugging how does testing differ from debugging?
commenting helps when debugging 
